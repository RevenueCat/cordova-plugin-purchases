release-tags-and-branches: &release-tags-and-branches
  filters:
    tags:
      ignore: /^.*-SNAPSHOT/
    branches:
      only: /^release\/.*/

version: 2.1
orbs:
  android: circleci/android@1.0

commands:
  android-sdk-dependencies:
    description: "Install and set android SDK"
    steps:
      - run:
          name: set ANDROID_SDK_ROOT
          command: |
            echo 'export ANDROID_SDK_ROOT=$HOME/android-tools'  >> $BASH_ENV
      - restore_cache:
          key: android=tools-v1-{{ checksum "scripts/install-android-tools.sh" }}-{{ arch }}

      - run:
          name: install android tools
          command: |
            sh scripts/install-android-tools.sh
            echo 'export PATH=$ANDROID_SDK_ROOT/tools/bin:$PATH'  >> $BASH_ENV
            echo 'export PATH=$ANDROID_SDK_ROOT/tools:$PATH'  >> $BASH_ENV
            echo 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH'  >> $BASH_ENV
            echo 'export PATH=$ANDROID_SDK_ROOT/emulator:$PATH'  >> $BASH_ENV
            source $BASH_ENV
      - save_cache:
          key: android=tools-v1-{{ checksum "scripts/install-android-tools.sh" }}-{{ arch }}
          paths:
            - ~/android-tools
  
  npm-dependencies:
    description: "Install all global and local npm dependencies"
    steps:
      - run: npm install -g cordova
      - run: npm install -g github:apache/cordova-paramedic#c394568c093b13da6a1fe69546aef0a66c21a7de
      - run: npm install --legacy-peer-deps

  npm-ios-dependencies:
    description: "Install all ios global and local npm dependencies"
    steps:
      - run: npm install -g ios-deploy
      - run: npm install --legacy-peer-deps
    
  replace-api-key-linux:
    description: "Replace API_KEY"
    steps:
      - run: sed -i s/api_key/$API_KEY/ tests/tests.js

  replace-api-key:
    description: "Replace API_KEY"
    steps:
      - run: sed -i .bck s/api_key/$API_KEY/ tests/tests.js

  install-sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Setup Java environment
          command: |
            sdk env install
            echo -e '\nexport JAVA_HOME="/home/circleci/.sdkman/candidates/java/current"' >> $BASH_ENV

  install-nvm:
    steps:
      - run:
          name: Install node 16.13.1
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
            echo 'export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: nvm install 16.13.1
      - run: nvm use 16.13.1
      - run: echo 'nvm use 16.13.1' >> $BASH_ENV
      - run: node -v

jobs:
  android-integration-test:
    description: "Run Android integration tests for Cordova"
    executor:
      name: android/android-machine
      resource-class: large
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - install-sdkman
      - android/accept-licenses
      - android/create-avd:
          avd-name: myavd
          system-image: system-images;android-29;default;x86
          install: true
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          post-emulator-launch-assemble-command: ""
      - install-nvm
      - npm-dependencies
      - replace-api-key-linux
      - run: sudo apt-get update
      - run: sudo apt-get install gradle
      - run: rm -rf ~/.gradle/caches/
      - run: npm run test:android
    environment:
      JVM_OPTS: -Xmx6g
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

  ios-integration-test:
    description: "Run iOS integration tests for Cordova"
    macos:
      xcode: 13.1.0
    steps:
      - checkout
      - run:
          name: Start simulator
          command: xcrun instruments -w "iPhone 11 Pro (13.3) [" || true
      - npm-dependencies
      - npm-ios-dependencies
      - replace-api-key
      - run: npm run test:ios

  runtest:
    docker:
      - image: circleci/node:lts

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test
      - run: yarn tslint
      - run:
          name: Build
          command: |
            yarn build

workflows:
  version: 2
  build-test:
    jobs:
      - runtest
  
  android-integration-test:
    jobs:
      - android-integration-test: *release-tags-and-branches
  
  ios-integration-test:
    jobs:
      - ios-integration-test: *release-tags-and-branches

