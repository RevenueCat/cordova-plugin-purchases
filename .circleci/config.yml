version: 2.1
orbs:
  android: circleci/android@1.0
  revenuecat: revenuecat/sdks-common-config@2.0.0

aliases:
  release-tags: &release-tags
    filters:
      tags:
        ignore: /^.*-SNAPSHOT/
      branches:
        ignore: /.*/

  release-tags-and-branches: &release-tags-and-branches
    filters:
      tags:
        ignore: /^.*-SNAPSHOT/
      branches:
        only: /^release\/.*/

  only-main-branch: &only-main-branch
    filters:
      tags:
        ignore: /.*/
      branches:
        only: main

commands:

  npm-dependencies:
    description: "Install all global and local npm dependencies"
    steps:
      - run: npm install -g cordova
      - run: npm install -g github:apache/cordova-paramedic#c394568c093b13da6a1fe69546aef0a66c21a7de
      - run: npm install --legacy-peer-deps
      - run: npm install --global yarn

  api-tester-dependencies:
    description: "Install API Tester dependencies"
    steps:
       - install-nvm
       - run: npm install typescript -g
       - save_cache:
          paths:
            - node_modules
          key: api-tester-dependencies-{{ checksum "package.json" }}

  yarn-dependencies:
    description: "Install yarn dependencies"
    steps:
       - install-nvm
       - npm-dependencies
       - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
       - run: yarn
       - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  npm-ios-dependencies:
    description: "Install all ios global and local npm dependencies"
    steps:
      - run: npm install -g ios-deploy
      - run: npm install --legacy-peer-deps

  replace-api-key-linux:
    description: "Replace API_KEY"
    steps:
      - run: sed -i s/api_key/$API_KEY/ tests/tests.js

  replace-api-key:
    description: "Replace API_KEY"
    steps:
      - run: sed -i .bck s/api_key/$API_KEY/ tests/tests.js

  install-sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Setup Java environment
          command: |
            sdk env install
            echo -e '\nexport JAVA_HOME="/home/circleci/.sdkman/candidates/java/current"' >> $BASH_ENV

  install-nvm:
    steps:
      - run:
          name: Install node 16.13.1
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
            echo 'export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: nvm install 16.13.1
      - run: nvm use 16.13.1
      - run: echo 'nvm use 16.13.1' >> $BASH_ENV
      - run: node -v

  copy-npm-rc:
    steps:
      - run:
          name: Copy npmrc sample file to final location
          command: cp .npmrc.SAMPLE .npmrc

jobs:
  android-integration-test:
    description: "Run Android integration tests for Cordova"
    executor:
      name: android/android-machine
      resource-class: large
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - install-sdkman
      - run: sdkmanager "platforms;android-32"
      - run: sdkmanager "build-tools;32.0.0"
      - android/accept-licenses
      - android/create-avd:
          avd-name: myavd
          system-image: system-images;android-31;google_apis;x86_64
          install: true
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          wait-for-emulator: false
          post-emulator-launch-assemble-command: ""
      - install-nvm
      - npm-dependencies
      - replace-api-key-linux
      - run: sdk install gradle 7.5
      - run: rm -rf ~/.gradle/caches/
      - run: npm run test:android
    environment:
      JVM_OPTS: -Xmx6g
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

  ios-integration-test:
    description: "Run iOS integration tests for Cordova"
    macos:
      xcode: 13.3.1
    steps:
      - checkout
      - run:
          name: Start simulator
          command: xcrun instruments -w "iPhone 13 (15.4) [" || true
      - npm-dependencies
      - npm-ios-dependencies
      - replace-api-key
      - run:
          name: npm run test:iOS
          command: npm run test:ios
          no_output_timeout: 30m

  runtest:
    docker:
      - image: cimg/ruby:2.6

    steps:
      - checkout
      - yarn-dependencies
      - run: yarn test
      - run: yarn tslint
      - run:
          name: Build
          command: |
            yarn build

  api-tester:
    docker:
      - image: cimg/ruby:2.6

    steps:
      - checkout
      - api-tester-dependencies
      - restore_cache:
          keys:
            - api-tester-dependencies-{{ checksum "package.json" }}
      - run:
          name: Compile API Tester
          command: tsc -p apiTester

  docs-deploy:
    docker:
      - image: cimg/ruby:2.6

    steps:
      - checkout
      - yarn-dependencies
      # Bundler
      - restore_cache:
          keys:
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: |
              bundle config set --local clean 'true'
              bundle config set --local path 'vendor/bundle'
              bundle install
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - revenuecat/setup-git-credentials
      - run:
          name: Build docs
          command: bundle exec fastlane generate_docs

  prepare-next-version:
    description: "Creates a PR with the new snapshot version"
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - revenuecat/trust-github-key
      - revenuecat/setup-git-credentials
      - run:
          name: Prepare next version
          command: bundle exec fastlane prepare_next_version

  make-release:
    description: "Publishes the new version and creates a github release"
    macos:
      xcode: 13.3.1
    steps:
      - checkout
      - npm-dependencies
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - revenuecat/trust-github-key
      - copy-npm-rc
      - run:
          name: release
          command: bundle exec fastlane release

workflows:
  version: 2
  build-test:
    jobs:
      - runtest

  deploy:
    jobs:
      - make-release:
          <<: *release-tags
      - docs-deploy:
          <<: *release-tags
          requires:
            - make-release

  android-integration-test:
    jobs:
      - android-integration-test: *release-tags-and-branches

  ios-integration-test:
    jobs:
      - ios-integration-test: *release-tags-and-branches

  api-tester-check:
    jobs:
      - api-tester

  danger:
     jobs:
       - revenuecat/danger

  snapshot-bump:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - prepare-next-version:
          <<: *only-main-branch
